{"version":3,"sources":["p2p.ts","module/PeerConnection/PeerConnection.tsx","styles/normalizeCss.ts","styles/globalStyle.ts","components/Button/Button.ts","assets/logo.svg","components/Header/Header.tsx","components/Footer/Footer.tsx","module/useValidator/useValidator.tsx","types/MessageSenderEnum.ts","types/MessageTypeEnum.ts","module/ChatMessages/ChatMessages.tsx","module/useChat/useChat.ts","components/Chat/ChatMessage.tsx","components/TextArea/TextArea.ts","components/Chat/Chat.tsx","components/Chess/Chess.tsx","util/connectionDescriptionValidator.ts","util/connectionDescriptionEncoding.ts","components/HostOrSlave/HostOrSlave.tsx","components/Host/Host.tsx","components/Slave/Slave.tsx","assets/message_undraw.svg","assets/share_undraw.svg","App.tsx","index.tsx"],"names":["createPeerConnection","channelInstance","remoteDescription","iceServers","urls","username","credential","onChannelOpen","onMessageReceived","onDisconnect","peerConnection","RTCPeerConnection","a","createOffer","description","setLocalDescription","setRemoteDescription","JSON","parse","createAnswer","setAnswerDescription","answerDescription","sendMessage","message","send","Promise","res","onicecandidate","e","candidate","localDescription","sdp","replace","stringify","oniceconnectionstatechange","iceConnectionState","ondatachannel","channel","onopen","onmessage","event","data","createDataChannel","console","error","setupChannelAsAHost","PEER_CONNECTION_MODE","peerConnectionSubject","Subject","PeerConnectionContext","createContext","PeerConnectionProvider","children","useState","undefined","mode","setMode","isConnected","setIsConnected","peerConnectionRef","useRef","useCallback","messageString","next","startAsHost","HOST","current","Base64","encode","startAsSlave","connectionDescription","SLAVE","decode","setRemoteConnectionDescription","localConnectionDescription","useMemo","Provider","value","normalizeCss","css","GlobalStyle","createGlobalStyle","Button","styled","button","props","hide","LogoPlay","div","Header","onClickButton","hideButton","href","src","logo","alt","onClick","CenteredFooter","Footer","memo","target","rel","squareStyling","pieceSquare","history","sourceSquare","length","from","targetSquare","to","backgroundColor","MESSAGE_SENDER","MESSAGE_TYPE","useValidator","game","fen","setFen","orientation","React","dropStyle","setDropStyle","squareStyles","setSquareStyles","setPieceSquare","setHistory","position","onDrop","turn","game_over","move","promotion","verbose","onMouseOverSquare","square","moves","squaresToHighlight","i","push","highlightStyles","reduce","c","background","highlightSquare","onMouseOutSquare","onDragOverSquare","boxShadow","onSquareClick","chatMessagesSubject","ReplaySubject","ChatMessagesContext","useChatMessages","useContext","chatMessages","setChatMessages","useEffect","subscription","subscribe","chatMessage","unsubscribe","sendChatMessage","useChat","usePeerConnection","sendTextChatMessage","messageText","id","shortid","generate","sender","STRANGER","type","TEXT","timestamp","Date","payload","ME","text","sendChessMessage","CHESS","useChatPeerConnectionSubscription","usePeerConnectionSubscription","Text","Message","ChatTextMessage","toLocaleTimeString","ChatMessage","TextArea","textarea","MessageButton","MessageTextArea","MessageForm","form","MessagesInnerContainer","MessagesContainer","Container","Chat","messageToSend","setMessageToSend","formRef","handleTextAreaChange","preventDefault","stopPropagation","handleTextAreaKeyDown","which","keyCode","shiftKey","handleSubmit","map","ref","onSubmit","placeholder","onChange","onKeyDown","BoardWrapper","ChessBoard","onDropOption","onClickOption","options","load","window","innerWidth","width","setWidth","onresize","parsed","FenParser","boardStyle","borderRadius","calcWidth","dropSquareStyle","transitionDuration","connectionDescriptionValidator","createValidator","d","connectionDescriptionCode","InvitationTextArea","SlaveButton","ErrorMessage","Form","ModalContainer","ModalHalf","Or","HostOrSlave","setConnectionDescription","setError","connectionDescriptionObject","Error","StyledTextArea","Instruction","Step","Card","Host","remoteConnectionDescriptionInputValue","setRemoteConnectionDescriptionInputValue","copyTextAreaRef","createRef","encodedConnectionDescription","readOnly","select","copy","CopyButton","Slave","InnerWrapper","Wrapper","FlexContainer","reversed","TextContainer","ChessJS","App","isModalOpen","setModalOpen","share","style","content","height","top","left","right","bottom","padding","marginRight","transform","isOpen","onRequestClose","contentLabel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f685275.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-use-before-define */\nconst CHANNEL_LABEL = 'RTCHESS_CHANNEL_LABEL';\n\nexport interface CreatePeerConnectionProps {\n  remoteDescription?: string;\n  iceServers?: RTCIceServer[];\n  onChannelOpen: () => any;\n  onMessageReceived: (message: string) => any;\n  onDisconnect: () => any;\n}\n\nexport interface CreatePeerConnectionResponse {\n  localDescription: string;\n  setAnswerDescription: (answerDescription: string) => void;\n  sendMessage: (message: string) => void;\n}\n\nexport function createPeerConnection({\n  remoteDescription,\n  iceServers = [\n    {\n      urls: 'stun:stun.l.google.com:19302',\n    },\n    {\n      urls: 'turn:turn.anyfirewall.com:443?transport=tcp',\n      username: 'webrtc',\n      credential: 'webrtc',\n    },\n  ],\n  onChannelOpen,\n  onMessageReceived,\n  onDisconnect,\n}: CreatePeerConnectionProps): Promise<CreatePeerConnectionResponse> {\n  const peerConnection = new RTCPeerConnection({\n    iceServers,\n  });\n  let channelInstance: RTCDataChannel;\n\n  function setupChannelAsAHost() {\n    try {\n      channelInstance = peerConnection.createDataChannel(CHANNEL_LABEL);\n\n      channelInstance.onopen = function () {\n        onChannelOpen();\n      };\n\n      channelInstance.onmessage = function (event) {\n        onMessageReceived(event.data);\n      };\n    } catch (e) {\n      console.error('No data channel (peerConnection)', e);\n    }\n  }\n\n  async function createOffer() {\n    const description = await peerConnection.createOffer();\n    peerConnection.setLocalDescription(description);\n  }\n\n  function setupChannelAsASlave() {\n    peerConnection.ondatachannel = function ({ channel }) {\n      channelInstance = channel;\n      channelInstance.onopen = function () {\n        onChannelOpen();\n      };\n\n      channelInstance.onmessage = function (event) {\n        onMessageReceived(event.data);\n      };\n    };\n  }\n\n  async function createAnswer(remoteDescription: string) {\n    await peerConnection.setRemoteDescription(JSON.parse(remoteDescription));\n    const description = await peerConnection.createAnswer();\n    peerConnection.setLocalDescription(description);\n  }\n\n  function setAnswerDescription(answerDescription: string) {\n    peerConnection.setRemoteDescription(JSON.parse(answerDescription));\n  }\n\n  function sendMessage(message: string) {\n    if (channelInstance) {\n      channelInstance.send(message);\n    }\n  }\n\n  return new Promise((res) => {\n    peerConnection.onicecandidate = function (e) {\n      if (e.candidate === null && peerConnection.localDescription) {\n        peerConnection.localDescription.sdp.replace('b=AS:30', 'b=AS:1638400');\n        res({\n          localDescription: JSON.stringify(peerConnection.localDescription),\n          setAnswerDescription,\n          sendMessage,\n        });\n      }\n    };\n    \n    peerConnection.oniceconnectionstatechange = function() {\n      if(peerConnection.iceConnectionState === 'disconnected') {\n          onDisconnect();\n      }\n    }\n\n\n    if (!remoteDescription) {\n      setupChannelAsAHost();\n      createOffer();\n    } else {\n      setupChannelAsASlave();\n      createAnswer(remoteDescription);\n    }\n  });\n}\n","import React, { createContext, FC, useState, useRef, useCallback, useEffect, useContext, useMemo } from 'react';\nimport { Subject } from 'rxjs';\nimport { Base64 } from 'js-base64';\n\nimport { createPeerConnection, CreatePeerConnectionResponse } from '../../p2p';\n\nexport type ConnectionDescription = {\n  description: string;\n};\nexport enum PEER_CONNECTION_MODE {\n  HOST = 'HOST',\n  SLAVE = 'SLAVE',\n}\n\nconst iceServers: RTCIceServer[] = [\n  {\n    urls: 'stun:stun.l.google.com:19302',\n  },\n  // {\n  //   urls: 'turn:turn.anyfirewall.com:443?transport=tcp',\n  //   username: 'webrtc',\n  //   credential: 'webrtc',\n  // },\n];\n\nconst peerConnectionSubject = new Subject<any>();\n\ninterface PeerConnectionContextValue {\n  mode: PEER_CONNECTION_MODE | undefined;\n  isConnected: boolean;\n  localConnectionDescription: ConnectionDescription | undefined;\n  startAsHost: () => void;\n  startAsSlave: (connectionDescription: ConnectionDescription) => void;\n  setRemoteConnectionDescription: (connectionDescription: ConnectionDescription) => void;\n  sendMessage: (message: any) => void;\n  peerConnectionSubject: typeof peerConnectionSubject;\n}\n\nconst PeerConnectionContext = createContext<PeerConnectionContextValue>({} as PeerConnectionContextValue);\n\nexport const PeerConnectionProvider: FC = ({ children }) => {\n  const [mode, setMode] = useState<PEER_CONNECTION_MODE | undefined>(undefined);\n  const [localDescription, setLocalDescription] = useState<string | undefined>();\n  const [isConnected, setIsConnected] = useState(false);\n  const peerConnectionRef = useRef<CreatePeerConnectionResponse>();\n\n  const onChannelOpen = useCallback(() => setIsConnected(true), [setIsConnected]);\n  \n  const onDisconnect = useCallback(() => {\n    setIsConnected(false);\n    setMode(undefined);\n  }, [setIsConnected, setMode])\n\n  const onMessageReceived = useCallback((messageString: string) => {\n    try {\n      const message = JSON.parse(messageString);\n      peerConnectionSubject.next(message);\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  const startAsHost = useCallback(async () => {\n    if (typeof mode !== 'undefined') return;\n\n    setMode(PEER_CONNECTION_MODE.HOST);\n    peerConnectionRef.current = await createPeerConnection({\n      iceServers,\n      onMessageReceived,\n      onChannelOpen,\n      onDisconnect,\n    });\n\n    setLocalDescription(Base64.encode(peerConnectionRef.current.localDescription));\n  }, [mode, setMode, onMessageReceived, onChannelOpen, onDisconnect, setLocalDescription]);\n\n  const startAsSlave = useCallback(\n    async (connectionDescription: ConnectionDescription) => {\n      if (typeof mode !== 'undefined') return;\n\n      setMode(PEER_CONNECTION_MODE.SLAVE);\n\n      peerConnectionRef.current = await createPeerConnection({\n        iceServers,\n        remoteDescription: Base64.decode(connectionDescription.description),\n        onMessageReceived,\n        onChannelOpen,\n        onDisconnect,\n      });\n      setLocalDescription(Base64.encode(peerConnectionRef.current.localDescription));\n    },\n    [mode, setMode, onMessageReceived, onChannelOpen, onDisconnect, setLocalDescription],\n  );\n\n  const setRemoteConnectionDescription = useCallback((connectionDescription: ConnectionDescription) => {\n    if (!peerConnectionRef.current) return;\n\n    peerConnectionRef.current.setAnswerDescription(Base64.decode(connectionDescription.description));\n  }, []);\n\n  const sendMessage = useCallback((message) => {\n    if (!peerConnectionRef.current) return;\n\n    const messageString = JSON.stringify(message);\n\n    peerConnectionRef.current.sendMessage(messageString);\n  }, []);\n\n  const localConnectionDescription: ConnectionDescription | undefined = useMemo(\n    () =>\n      localDescription\n        ? {\n            description: localDescription,\n          }\n        : undefined,\n    [localDescription],\n  );\n\n  return (\n    <PeerConnectionContext.Provider\n      value={{\n        mode,\n        isConnected,\n        localConnectionDescription,\n        startAsHost,\n        startAsSlave,\n        setRemoteConnectionDescription,\n        sendMessage,\n        peerConnectionSubject,\n      }}\n    >\n      {children}\n    </PeerConnectionContext.Provider>\n  );\n};\n\nexport const usePeerConnection = <T extends any>() => {\n  const {\n    mode,\n    isConnected,\n    localConnectionDescription,\n    startAsHost,\n    startAsSlave,\n    setRemoteConnectionDescription,\n    sendMessage,\n  } = useContext(PeerConnectionContext);\n\n  return {\n    mode,\n    isConnected,\n    localConnectionDescription,\n    startAsHost,\n    startAsSlave,\n    setRemoteConnectionDescription,\n    sendMessage: sendMessage as (message: T) => void,\n  };\n};\n\nexport const usePeerConnectionSubscription = <T extends any>(onMessageReceived: (message: T) => void) => {\n  const { peerConnectionSubject } = useContext(PeerConnectionContext);\n\n  useEffect(() => {\n    const subscription = (peerConnectionSubject as Subject<T>).subscribe(onMessageReceived);\n\n    return () => subscription.unsubscribe();\n  }, [peerConnectionSubject, onMessageReceived]);\n};\n","import { css } from 'styled-components';\n\nexport const normalizeCss = css`\n  /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n  /* Document\n    ========================================================================== */\n\n  /**\n   * 1. Correct the line height in all browsers.\n   * 2. Prevent adjustments of font size after orientation changes in iOS.\n   */\n\n  html {\n    line-height: 1.15; /* 1 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n\n  /* Sections\n    ========================================================================== */\n\n  /**\n   * Remove the margin in all browsers.\n   */\n\n  body {\n    margin: 0;\n    font-family: 'Source Code Pro', monospace;\n  }\n\n  /**\n   * Render the \"main\" element consistently in IE.\n   */\n\n  main {\n    display: block;\n  }\n\n  /**\n   * Correct the font size and margin on \"h1\" elements within \"section\" and\n   * \"article\" contexts in Chrome, Firefox, and Safari.\n   */\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  /* Grouping content\n    ========================================================================== */\n\n  /**\n   * 1. Add the correct box sizing in Firefox.\n   * 2. Show the overflow in Edge and IE.\n   */\n\n  hr {\n    box-sizing: content-box; /* 1 */\n    height: 0; /* 1 */\n    overflow: visible; /* 2 */\n  }\n\n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd \"em\" font sizing in all browsers.\n   */\n\n  pre {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /* Text-level semantics\n    ========================================================================== */\n\n  /**\n   * Remove the gray background on active links in IE 10.\n   */\n\n  a {\n    background-color: transparent;\n  }\n\n  /**\n   * 1. Remove the bottom border in Chrome 57-\n   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n   */\n\n  abbr[title] {\n    border-bottom: none; /* 1 */\n    text-decoration: underline; /* 2 */\n    text-decoration: underline dotted; /* 2 */\n  }\n\n  /**\n   * Add the correct font weight in Chrome, Edge, and Safari.\n   */\n\n  b,\n  strong {\n    font-weight: bolder;\n  }\n\n  /**\n   * 1. Correct the inheritance and scaling of font size in all browsers.\n   * 2. Correct the odd \"em\" font sizing in all browsers.\n   */\n\n  code,\n  kbd,\n  samp {\n    font-family: monospace, monospace; /* 1 */\n    font-size: 1em; /* 2 */\n  }\n\n  /**\n   * Add the correct font size in all browsers.\n   */\n\n  small {\n    font-size: 80%;\n  }\n\n  /**\n   * Prevent \"sub\" and \"sup\" elements from affecting the line height in\n   * all browsers.\n   */\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  /* Embedded content\n    ========================================================================== */\n\n  /**\n   * Remove the border on images inside links in IE 10.\n   */\n\n  img {\n    border-style: none;\n  }\n\n  /* Forms\n    ========================================================================== */\n\n  /**\n   * 1. Change the font styles in all browsers.\n   * 2. Remove the margin in Firefox and Safari.\n   */\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    font-family: inherit; /* 1 */\n    font-size: 100%; /* 1 */\n    line-height: 1.15; /* 1 */\n    margin: 0; /* 2 */\n  }\n\n  /**\n   * Show the overflow in IE.\n   * 1. Show the overflow in Edge.\n   */\n\n  button,\n  input {\n    /* 1 */\n    overflow: visible;\n  }\n\n  /**\n   * Remove the inheritance of text transform in Edge, Firefox, and IE.\n   * 1. Remove the inheritance of text transform in Firefox.\n   */\n\n  button,\n  select {\n    /* 1 */\n    text-transform: none;\n  }\n\n  /**\n   * Correct the inability to style clickable types in iOS and Safari.\n   */\n\n  button,\n  [type='button'],\n  [type='reset'],\n  [type='submit'] {\n    -webkit-appearance: button;\n  }\n\n  /**\n   * Remove the inner border and padding in Firefox.\n   */\n\n  button::-moz-focus-inner,\n  [type='button']::-moz-focus-inner,\n  [type='reset']::-moz-focus-inner,\n  [type='submit']::-moz-focus-inner {\n    border-style: none;\n    padding: 0;\n  }\n\n  /**\n   * Restore the focus styles unset by the previous rule.\n   */\n\n  button:-moz-focusring,\n  [type='button']:-moz-focusring,\n  [type='reset']:-moz-focusring,\n  [type='submit']:-moz-focusring {\n    outline: 1px dotted ButtonText;\n  }\n\n  /**\n   * Correct the padding in Firefox.\n   */\n\n  fieldset {\n    padding: 0.35em 0.75em 0.625em;\n  }\n\n  /**\n   * 1. Correct the text wrapping in Edge and IE.\n   * 2. Correct the color inheritance from \"fieldset\" elements in IE.\n   * 3. Remove the padding so developers are not caught out when they zero out\n   *    \"fieldset\" elements in all browsers.\n   */\n\n  legend {\n    box-sizing: border-box; /* 1 */\n    color: inherit; /* 2 */\n    display: table; /* 1 */\n    max-width: 100%; /* 1 */\n    padding: 0; /* 3 */\n    white-space: normal; /* 1 */\n  }\n\n  /**\n   * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n   */\n\n  progress {\n    vertical-align: baseline;\n  }\n\n  /**\n   * Remove the default vertical scrollbar in IE 10+.\n   */\n\n  textarea {\n    overflow: auto;\n  }\n\n  /**\n   * 1. Add the correct box sizing in IE 10.\n   * 2. Remove the padding in IE 10.\n   */\n\n  [type='checkbox'],\n  [type='radio'] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  /**\n   * Correct the cursor style of increment and decrement buttons in Chrome.\n   */\n\n  [type='number']::-webkit-inner-spin-button,\n  [type='number']::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  /**\n   * 1. Correct the odd appearance in Chrome and Safari.\n   * 2. Correct the outline style in Safari.\n   */\n\n  [type='search'] {\n    -webkit-appearance: textfield; /* 1 */\n    outline-offset: -2px; /* 2 */\n  }\n\n  /**\n   * Remove the inner padding in Chrome and Safari on macOS.\n   */\n\n  [type='search']::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  /**\n   * 1. Correct the inability to style clickable types in iOS and Safari.\n   * 2. Change font properties to \"inherit\" in Safari.\n   */\n\n  ::-webkit-file-upload-button {\n    -webkit-appearance: button; /* 1 */\n    font: inherit; /* 2 */\n  }\n\n  /* Interactive\n    ========================================================================== */\n\n  /*\n  * Add the correct display in Edge, IE 10+, and Firefox.\n  */\n\n  details {\n    display: block;\n  }\n\n  /*\n  * Add the correct display in all browsers.\n  */\n\n  summary {\n    display: list-item;\n  }\n\n  /* Misc\n    ========================================================================== */\n\n  /**\n   * Add the correct display in IE 10+.\n   */\n\n  template {\n    display: none;\n  }\n\n  /**\n   * Add the correct display in IE 10.\n   */\n\n  [hidden] {\n    display: none;\n  }\n`;\n","import { createGlobalStyle } from 'styled-components';\n\nimport { normalizeCss } from './normalizeCss';\n\nexport const GlobalStyle = createGlobalStyle`\n  ${normalizeCss};\n\n  html, body {\n    font-family: Lucida Console, Courier, monospace;\n    color: black;\n    font-size: 10px;\n  }\n\n  html {\n    box-sizing: border-box;\n  }\n\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n`;\n","import styled from 'styled-components';\n\ntype ButtonProps = {\n  hide?: boolean;\n};\n\nexport const Button = styled.button<ButtonProps>`\n  background-color: black;\n  color: white;\n  outline: none;\n  border: none;\n  padding: 1vh 2vh;\n  font-size: 1.5vh;\n  display: ${props => props.hide ? \"none\" : \"default\"}\n`;\n","export default __webpack_public_path__ + \"static/media/logo.f8f94c84.svg\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '../Button/Button';\n\nimport logo from '../../assets/logo.svg';\n\nconst LogoPlay = styled.div`\n  width: 95%;\n  margin-left: 2%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 2.5vh 2vw 2vh 2vw;\n  img {\n    max-width: 200px;\n  }\n`;\n\ninterface HeaderProps {\n  onClickButton: () => any;\n  hideButton: boolean;\n}\n\nexport function Header({\n  onClickButton,\n  hideButton,\n}: HeaderProps) {\n  return (\n    <LogoPlay>\n      <a href=\"/\"><img src={logo} alt=\"logo\"/></a>\n      <Button hide={hideButton} onClick={onClickButton}>Play Now</Button>\n    </LogoPlay>\n  );\n};","import React, { memo, FC } from 'react';\nimport styled from 'styled-components';\n\nconst CenteredFooter = styled.div`\nwidth: 100%;\nfont-weight: 600;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nfont-size: 1.5vh;\nmargin-top: 5vh;\na {\n  color: #5BA02D;\n  &:visited {\n    color: #5BA02D;\n  }\n}\n`;\n\nexport const Footer: FC = memo(function Footer() {\n  return (\n    <CenteredFooter>\n      <span>Made with WebRTC and 💖 by <a href=\"https://arora-aditya.com\" target=\"_blank\" rel=\"noreferrer\">Aditya Arora</a></span>\n    </CenteredFooter>\n  );\n});","import React from \"react\";\nimport { ChessInstance, Square} from \"chess.js\";\n//@ts-ignore\n\nfunction squareStyling ({ pieceSquare, history }:{pieceSquare: Square, history: any})  {\n    const sourceSquare = history.length && history[history.length - 1].from;\n    const targetSquare = history.length && history[history.length - 1].to;\n  \n    return {\n      [pieceSquare]: { backgroundColor: \"rgba(255, 255, 0, 0.4)\" },\n      ...(history.length && {\n        [sourceSquare]: {\n          backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n        }\n      }),\n      ...(history.length && {\n        [targetSquare]: {\n          backgroundColor: \"rgba(255, 255, 0, 0.4)\"\n        }\n      })\n    };\n};\n  \nconst useValidator = (game: ChessInstance, fen: string, setFen:React.Dispatch<React.SetStateAction<string>>, orientation: string) => {\n    \n  const [dropStyle, setDropStyle] = React.useState({});\n  const [squareStyles, setSquareStyles] = React.useState({});\n   //@ts-ignore\n  const [pieceSquare, setPieceSquare] = React.useState<Square>('');\n  const [history, setHistory] = React.useState<any>([]);\n    \n  const removeHighlightSquare = ()  => {\n    setSquareStyles(squareStyling({ pieceSquare, history}))\n  }\n\n  const highlightSquare = (sourceSquare: Square, squaresToHighlight: Square[]) =>{\n    const highlightStyles = [sourceSquare, ...squaresToHighlight].reduce(\n        (a, c) => {\n          return {\n            ...a,\n            ...{\n              [c]: {\n                background:\n                  \"rgba(44, 230, 44, 0.219)\",\n                // borderRadius: \"50%\"\n              }\n            },\n            ...squareStyling({\n              history: history,\n              pieceSquare: pieceSquare\n            })\n          };\n        },\n      {}\n    );\n    setSquareStyles({...squareStyles, ...highlightStyles})\n  }\n\n  const onDrop = ({sourceSquare, targetSquare}:{sourceSquare: Square, targetSquare: Square}) => {\n    if(game.turn() !== orientation[0]) return;\n    if(game.game_over()) return;\n    let move = game.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\"\n    });\n    \n    if(move === null) return;\n   \n    setFen(game.fen());\n    setHistory(game.history({verbose: true})) \n    setSquareStyles(squareStyling({ pieceSquare, history}))\n  }\n\n  const onMouseOverSquare = (square: Square)  => {\n    \n    let moves = game.moves({\n        square: square,\n        verbose: true\n    });\n    \n    if(moves.length === 0) return;\n\n    let squaresToHighlight: Square[] = [];\n    for (var i = 0; i < moves.length; i++) {\n      squaresToHighlight.push(moves[i].to);\n    }\n\n    highlightSquare(square, squaresToHighlight);\n\n    \n  }\n  \n  const onMouseOutSquare = (square: Square) => {\n        removeHighlightSquare();\n  }\n    \n  const onDragOverSquare = (square: Square)  => {\n      setDropStyle(square === \"e4\" || square === \"d4\" || square === \"e5\" || square === \"d5\"\n      ? { backgroundColor: \"cornFlowerBlue\" }\n      : { boxShadow: \"inset 0 0 1px 4px rgb(255, 255, 0)\" })\n  }\n\n  const onSquareClick = (square: Square) => {\n    if(game.turn() !== orientation[0]) return;\n    setPieceSquare(square);\n\n    let move = game.move({\n        from: pieceSquare,\n        to: square,\n        promotion: \"q\"\n    });\n    if(move === null) return;\n    setFen(game.fen());\n    setHistory(game.history({verbose: true})) \n    //@ts-ignore\n    setPieceSquare('');\n  }\n\n  return {\n      position: fen,\n      onDrop: onDrop,\n      onMouseOverSquare: onMouseOverSquare,\n      onMouseOutSquare: onMouseOutSquare,\n      onDragOverSquare: onDragOverSquare,\n      onSquareClick: onSquareClick,\n      squareStyles: squareStyles,\n      dropStyle: dropStyle\n  }\n}\n\n\n\nexport default useValidator;\n\n","export enum MESSAGE_SENDER {\n  ME = 'ME',\n  STRANGER = 'FRIEND',\n}\n","export enum MESSAGE_TYPE {\n  TEXT = 'TEXT',\n  CHESS = 'CHESS',\n}\n","import React, { useState, useCallback, createContext, FC, useContext, useEffect } from 'react';\nimport { ReplaySubject } from 'rxjs';\n\nimport { ChatMessageType } from '../../types/ChatMessageType';\n\nconst chatMessagesSubject = new ReplaySubject<ChatMessageType>();\n\nconst ChatMessagesContext = createContext(chatMessagesSubject);\n\nexport const ChatMessagesProvider: FC = ({ children }) => {\n  return <ChatMessagesContext.Provider value={chatMessagesSubject}>{children}</ChatMessagesContext.Provider>;\n};\n\nexport const useChatMessages = () => {\n  const chatMessagesSubject = useContext(ChatMessagesContext);\n  const [chatMessages, setChatMessages] = useState<ChatMessageType[]>([]);\n\n  useEffect(() => {\n    const subscription = chatMessagesSubject.subscribe((chatMessage) => {\n      setChatMessages((chatMessages) => [...chatMessages, chatMessage]);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [chatMessagesSubject, setChatMessages]);\n\n  const sendChatMessage = useCallback(\n    (chatMessage: ChatMessageType) => {\n      chatMessagesSubject.next(chatMessage);\n    },\n    [chatMessagesSubject],\n  );\n\n  return { chatMessages, sendChatMessage };\n};\n","import { useCallback } from 'react';\nimport shortid from 'shortid';\n\nimport { MessageType, MessageTextType, MessageChessType } from '../../types/MessageType';\nimport { usePeerConnection, usePeerConnectionSubscription } from '../PeerConnection/PeerConnection';\nimport { MESSAGE_SENDER } from '../../types/MessageSenderEnum';\nimport { MESSAGE_TYPE } from '../../types/MessageTypeEnum';\nimport { useChatMessages } from '../ChatMessages/ChatMessages';\nimport { ChatMessageType } from '../../types/ChatMessageType';\n\nexport const useChat = () => {\n  const { chatMessages, sendChatMessage } = useChatMessages();\n\n  const {\n    mode,\n    isConnected,\n    localConnectionDescription,\n    startAsHost,\n    startAsSlave,\n    setRemoteConnectionDescription,\n    sendMessage,\n  } = usePeerConnection<ChatMessageType>();\n\n  const sendTextChatMessage = useCallback(\n    (messageText: string) => {\n      const message: MessageTextType = {\n        id: shortid.generate(),\n        sender: MESSAGE_SENDER.STRANGER,\n        type: MESSAGE_TYPE.TEXT,\n        timestamp: +new Date(),\n        payload: messageText,\n      };\n\n      sendMessage(message);\n      sendChatMessage({\n        id: message.id,\n        sender: MESSAGE_SENDER.ME,\n        timestamp: message.timestamp,\n        text: message.payload,\n      });\n    },\n    [sendMessage, sendChatMessage],\n  );\n  \n  const sendChessMessage = useCallback(\n    (fen: string) => {\n      const message: MessageChessType = {\n        id: shortid.generate(),\n        sender: MESSAGE_SENDER.STRANGER,\n        type: MESSAGE_TYPE.CHESS,\n        timestamp: +new Date(),\n        payload: fen,\n      };\n\n      sendMessage(message);\n    },\n    [sendMessage],\n  );\n\n  return {\n    mode,\n    isConnected,\n    localConnectionDescription,\n    chatMessages,\n    startAsHost,\n    startAsSlave,\n    setRemoteConnectionDescription,\n    sendTextChatMessage,\n    sendChessMessage,\n  };\n};\n\n// This hook should be used only in one place since it's connecting Chat to PeerConnection\nexport const useChatPeerConnectionSubscription = (setFen: (fen: string) => any) => {\n  const { sendChatMessage } = useChatMessages();\n\n  const onMessageReceived = useCallback(\n    (message: MessageType) => {\n      if (message.type === MESSAGE_TYPE.TEXT) {\n        sendChatMessage({\n          id: message.id,\n          sender: MESSAGE_SENDER.STRANGER,\n          timestamp: message.timestamp,\n          text: message.payload,\n        });\n      } else if (message.type === MESSAGE_TYPE.CHESS) {\n        setFen(message.payload);\n      }\n    },\n    [sendChatMessage, setFen],\n  );\n\n  usePeerConnectionSubscription(onMessageReceived);\n};\n","import React, { FC, memo } from 'react';\nimport styled from 'styled-components';\n\nimport { MESSAGE_SENDER } from '../../types/MessageSenderEnum';\nimport { ChatMessageType } from '../../types/ChatMessageType';\n\nconst Text = styled.div``;\nconst Header = styled.div`\n`;\nconst Message = styled.div`\n`;\n\nconst ChatTextMessage: FC<Props> = memo(function ChatTextMessage({ chatMessage }) {\n  return (\n    <Message>\n      <Header>\n        <span>{chatMessage.sender === MESSAGE_SENDER.ME ? 'Me' : 'Friend'}</span> (\n        {new Date(chatMessage.timestamp).toLocaleTimeString()})\n      </Header>\n      <Text>{chatMessage.text}</Text>\n    </Message>\n  );\n});\n\ninterface Props {\n  chatMessage: ChatMessageType;\n}\n\nexport const ChatMessage: FC<Props> = memo(function ChatMessage({ chatMessage }) {\n  return <ChatTextMessage chatMessage={chatMessage} />;\n});\n","import styled from 'styled-components';\n\nexport const TextArea = styled.textarea`\n  display: block;\n  font-size: 10px;\n  width: 100%;\n  height: 30px;\n  border: 1px solid black;\n  outline: none;\n  background-image: none;\n  appearance: none;\n  background-color: transparent;\n  box-shadow: none;\n`;\n","import React, { useCallback, memo, FC, useRef, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { useChat } from '../../module/useChat/useChat';\nimport { ChatMessage } from './ChatMessage';\nimport { TextArea } from '../TextArea/TextArea';\nimport { Button } from '../Button/Button';\n\nconst MessageButton = styled(Button)`\n`;\nconst MessageTextArea = styled(TextArea)`\n`;\nconst MessageForm = styled.form`\n`;\nconst MessagesInnerContainer = styled.div`\n`;\nconst MessagesContainer = styled.div`\n\n  overflow: auto; \n  display: flex; \n  max-height: 10vh;\n  width: 80vw;\n  @media (min-width: 768px) {\n    max-height: 550px;\n    width: 20vw;\n  }\n  flex-direction: column-reverse;\n`;\nconst Container = styled.div`\n`;\n\nexport const Chat: FC = memo(function Chat() {\n  const { chatMessages, sendTextChatMessage } = useChat();\n  const [messageToSend, setMessageToSend] = useState<string>('');\n  const formRef = useRef<HTMLFormElement>();\n\n  const send = useCallback(() => {\n    sendTextChatMessage(messageToSend);\n    setMessageToSend('');\n  }, [sendTextChatMessage, messageToSend, setMessageToSend]);\n\n  const handleTextAreaChange: React.ChangeEventHandler<HTMLTextAreaElement> = useCallback(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      setMessageToSend(event.target.value);\n    },\n    [setMessageToSend],\n  );\n\n  const handleTextAreaKeyDown: React.KeyboardEventHandler<HTMLTextAreaElement> = useCallback(\n    (event) => {\n      if ((event.which !== 13 && event.keyCode !== 13) || event.shiftKey) return;\n      if (!formRef.current) return;\n\n      event.preventDefault();\n      event.stopPropagation();\n      send();\n    },\n    [send],\n  );\n\n  const handleSubmit: React.FormEventHandler = useCallback(\n    (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      send();\n    },\n    [send],\n  );\n\n  return (\n    <Container>\n      <MessagesContainer>\n        <MessagesInnerContainer>\n          {chatMessages.map((chatMessage) => (\n            <ChatMessage key={chatMessage.id} chatMessage={chatMessage} />\n          ))}\n        </MessagesInnerContainer>\n      </MessagesContainer>\n      <MessageForm ref={formRef as React.MutableRefObject<HTMLFormElement>} onSubmit={handleSubmit}>\n        <MessageTextArea\n          placeholder=\"Message...\"\n          value={messageToSend}\n          onChange={handleTextAreaChange}\n          onKeyDown={handleTextAreaKeyDown}\n        />\n        <MessageButton type=\"submit\">Send</MessageButton>\n      </MessageForm>\n    </Container>\n  );\n});\n","import React, {useEffect, useCallback} from 'react';\nimport styled from 'styled-components';\nimport Chessboard from 'chessboardjsx';\nimport useValidator from '../../module/useValidator/useValidator';\nimport {ChessInstance, Square} from 'chess.js';\nimport FenParser from '@chess-fu/fen-parser';\nimport { Chat } from '../Chat/Chat';\nimport { useChat } from '../../module/useChat/useChat';\n\ninterface ChessBoardProps {\n    game: ChessInstance, \n    fen: string, \n    setFen:React.Dispatch<React.SetStateAction<string>>,\n    position: string , \n    onDropOption?: ({ sourceSquare, targetSquare }: { sourceSquare: Square; targetSquare: Square; }) => void, \n    onClickOption?: (square: Square) => void,\n    options:Boolean ,\n    orientation: \"white\" | \"black\",\n    botmatch?: boolean,\n}\n\nconst Container = styled.div`\n  height: 80vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\n\nconst BoardWrapper = styled.div`\n  width: 80vw;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n  align-items: center;\n  justify-content: space-around;\n`;\n\nexport function ChessBoard({\n   game, fen, setFen, position = \"start\", onDropOption, onClickOption, options = false, orientation\n}: ChessBoardProps\n    ){\n    const { sendChessMessage } = useChat();\n    game.load(position);\n    const { \n         onMouseOverSquare, \n         onMouseOutSquare,\n         onDragOverSquare, \n         onSquareClick,\n         dropStyle,\n         squareStyles,\n         onDrop\n       } = useValidator(game, fen, setFen, orientation); \n\n    const [width, setWidth] = React.useState<number>(window.innerWidth);\n    \n    const send = useCallback(() => {\n      sendChessMessage(position);\n    }, [sendChessMessage, position]);\n    \n    useEffect(()=>{\n       window.onresize = () => {\n            setWidth(window.innerWidth);\n       }\n    },[])\n    \n    const resizeBoard = () =>  width < 700 ? width - 10: 600;\n    const boardStyle = { \n        borderRadius: \"5px\",\n        boxShadow: `0 5px 15px rgba(0, 0, 0, 0.5)`,\n    }\n    \n    useEffect(()=>{\n      const parsed = new FenParser(position);\n      if(orientation[0] !== parsed.turn){\n        send()\n      }\n    }, [position, orientation, send])\n    \n    return (\n      <Container>\n        <BoardWrapper>\n          <Chessboard \n            id=\"humanvshuman\"\n            boardStyle={boardStyle} \n            calcWidth={resizeBoard} \n            position={position}\n            onDrop={onDrop}\n            onMouseOverSquare={onMouseOverSquare}\n            onMouseOutSquare={onMouseOutSquare} \n            onDragOverSquare={onDragOverSquare}\n            onSquareClick={onSquareClick}\n            squareStyles={squareStyles}\n            dropSquareStyle={dropStyle}\n            transitionDuration={0}\n            orientation={orientation}\n          />\n          <Chat />\n        </BoardWrapper>\n      </Container>\n    )\n}\n\n","import { createValidator } from 'schemat';\n\nconst nonEmptyStringValidator = (d: any) => (typeof d === 'string' && d.length > 0 ? undefined : 'required');\n\nexport const connectionDescriptionValidator = createValidator({\n  description: nonEmptyStringValidator,\n});\n","import { Base64 } from 'js-base64';\n\nimport { ConnectionDescription } from '../module/PeerConnection/PeerConnection';\n\nexport function encode(connectionDescription: ConnectionDescription): string {\n  return Base64.encode(JSON.stringify(connectionDescription));\n}\n\nexport function decode(connectionDescriptionCode: string): ConnectionDescription {\n  return JSON.parse(Base64.decode(connectionDescriptionCode));\n}\n","import React, { FC, useState, MouseEventHandler, ChangeEventHandler, FormEventHandler, memo } from 'react';\nimport styled from 'styled-components';\n\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\nimport { decode } from '../../util/connectionDescriptionEncoding';\nimport { Button } from '../Button/Button';\nimport { TextArea } from '../TextArea/TextArea';\nimport { useChat } from '../../module/useChat/useChat';\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\n\nconst InvitationTextArea = styled(TextArea)`\n  width: 100px;\n`;\n\nconst SlaveButton = styled(Button)`\n  width: 100px;\n  margin-top: 4px;\n`;\nconst ErrorMessage = styled.div``;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: space-around;\n`;\n\nconst ModalHalf = styled.div`\n  font-size: 1.5vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  button {\n    margin: 1vh;\n    width: fit-content;\n  }\n  hr {\n    width: 90%;\n  }\n  textarea {\n  }\n`;\n\nconst Or = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 4vh;\n  height: 4vh;\n  font-size: 1.5vh;\n  background-color: black;\n  color: white;\n  border-radius: 50%;\n  transform: translate(0px, -2.5vh);\n  > span {\n    transform: translate(0.5px, -1.5px);\n    line-height: 1;\n  }\n`\n\nexport const HostOrSlave: FC = memo(function HostOrSlave() {\n  const { startAsHost, startAsSlave } = useChat();\n  const [connectionDescription, setConnectionDescription] = React.useState<string>('');\n  const [error, setError] = useState<string>('');\n\n  const handleHostBtnClick: MouseEventHandler<HTMLButtonElement> = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    startAsHost();\n  };\n\n  const handleConnectionDescriptionInputChange: ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n    setConnectionDescription(event.target.value);\n  };\n\n  const handleSlaveFormSubmit: FormEventHandler = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    try {\n      const connectionDescriptionObject = decode(connectionDescription);\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\n      startAsSlave(connectionDescriptionObject as ConnectionDescription);\n    } catch (error) {\n      setError('Connection Description invalid!');\n    }\n  };\n\n  return (\n      <ModalContainer>\n        <ModalHalf>\n          <Button onClick={handleHostBtnClick}>Start new</Button>\n        </ModalHalf>\n        <ModalHalf>\n          <hr />  \n          <Or><span>or</span></Or>\n        </ModalHalf>\n        <ModalHalf>\n        <Form onSubmit={handleSlaveFormSubmit}>\n          <InvitationTextArea \n            value={connectionDescription}\n            onChange={handleConnectionDescriptionInputChange}\n            placeholder=\"Paste invitation code here...\"/>\n            {!!error && <ErrorMessage>{error}</ErrorMessage>}\n            <SlaveButton type=\"submit\">Join</SlaveButton>\n          </Form>\n        </ModalHalf>\n      </ModalContainer>\n  );\n});\n","import React, { useState, createRef, FC, memo } from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\n\nimport { encode, decode } from '../../util/connectionDescriptionEncoding';\nimport { connectionDescriptionValidator } from '../../util/connectionDescriptionValidator';\nimport { TextArea } from '../TextArea/TextArea';\nimport { Button } from '../Button/Button';\nimport { useChat } from '../../module/useChat/useChat';\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\n\nconst ErrorMessage = styled.div``;\nconst StyledTextArea = styled(TextArea)`\n  margin-bottom: 1vh;\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nconst Instruction = styled.div`\n  color: black;\n  margin-bottom: 1vh;\n  margin-top: 1vh;\n`;\nconst Step = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  width: 2vh;\n  height: 2vh;\n  background-color: black;\n  color: white;\n  border-radius: 50%;\n  line-height: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n\n  > span {\n    display: inline-block;\n    // transform: translate(-0.2vh, -0.2vh);\n  }\n`;\nconst Card = styled.div`\n  position: relative;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n  border-top: none;\n`;\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  font-size: 1.5vh;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nexport interface HostProps {\n  connectionDescription: ConnectionDescription;\n  onSubmit: (remoteConnectionDescription: ConnectionDescription) => any;\n}\n\nexport const Host: FC = memo(function Host() {\n  const { localConnectionDescription, setRemoteConnectionDescription } = useChat();\n  const [remoteConnectionDescriptionInputValue, setRemoteConnectionDescriptionInputValue] = useState<string>('');\n  const [error, setError] = useState<string>('');\n  const copyTextAreaRef = createRef<HTMLTextAreaElement>();\n\n  const encodedConnectionDescription = encode(localConnectionDescription as ConnectionDescription);\n\n  const handleCopyClick = () => {\n    if (!copyTextAreaRef.current) return;\n\n    copyTextAreaRef.current.select();\n    copy(encodedConnectionDescription);\n  };\n\n  const handleRemoteConnectionDescriptionInputChange: React.ChangeEventHandler<HTMLTextAreaElement> = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setError('');\n    setRemoteConnectionDescriptionInputValue(event.target.value);\n  };\n\n  const handleSubmit: React.FormEventHandler = (event) => {\n    try {\n      event.stopPropagation();\n      event.preventDefault();\n      const connectionDescriptionObject = decode(remoteConnectionDescriptionInputValue);\n      if (connectionDescriptionValidator(connectionDescriptionObject)) throw new Error();\n      setRemoteConnectionDescription(connectionDescriptionObject as ConnectionDescription);\n    } catch (error) {\n      setError('Connection Description invalid!');\n    }\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Step>\n          <span>1</span>\n        </Step>\n        <Instruction>Send this code to your buddy:</Instruction>\n        <StyledTextArea ref={copyTextAreaRef} value={encodedConnectionDescription} readOnly />\n        <Button onClick={handleCopyClick}>Copy to clipboard</Button>\n      </Card>\n      <Card>\n        <Step>\n          <span>2</span>\n        </Step>\n        <Form onSubmit={handleSubmit}>\n          <Instruction>Code from your buddy:</Instruction>\n          <StyledTextArea\n            value={remoteConnectionDescriptionInputValue}\n            onChange={handleRemoteConnectionDescriptionInputChange}\n            placeholder=\"Paste an answer code\"\n          />\n          {!!error && <ErrorMessage>{error}</ErrorMessage>}\n          <Button type=\"submit\">Connect</Button>\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n","import React, { FC, createRef, memo } from 'react';\nimport styled from 'styled-components';\nimport copy from 'copy-to-clipboard';\n\nimport { encode } from '../../util/connectionDescriptionEncoding';\nimport { Button } from '../Button/Button';\nimport { TextArea } from '../TextArea/TextArea';\nimport { useChat } from '../../module/useChat/useChat';\nimport { ConnectionDescription } from '../../module/PeerConnection/PeerConnection';\n\nconst CopyButton = styled(Button)`\n  margin-top: 1vh;\n`;\nconst StyledTextArea = styled(TextArea)`\n  width: 70%;\n`;\nconst Instruction = styled.div`\n  font-size: 1.5vh;\n  color: black;\n  margin-bottom: 1vh;\n`;\nconst Card = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 24px;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nexport const Slave: FC = memo(function Slave() {\n  const { localConnectionDescription } = useChat();\n  const copyTextAreaRef = createRef<HTMLTextAreaElement>();\n\n  const encodedConnectionDescription = encode(localConnectionDescription as ConnectionDescription);\n\n  const handleCopyClick = () => {\n    if (!copyTextAreaRef.current) return;\n\n    copyTextAreaRef.current.select();\n    copy(encodedConnectionDescription);\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Instruction>Send back this code back to your friend</Instruction>\n        <StyledTextArea ref={copyTextAreaRef} value={encodedConnectionDescription} readOnly />\n        <CopyButton onClick={handleCopyClick}>Copy to clipboard</CopyButton>\n      </Card>\n    </Container>\n  );\n});\n","export default __webpack_public_path__ + \"static/media/message_undraw.58f7be79.svg\";","export default __webpack_public_path__ + \"static/media/share_undraw.8870c8da.svg\";","import React, { useState, memo, FC } from 'react';\nimport styled from 'styled-components';\nimport Modal from 'react-modal';\n\nimport { Header } from './components/Header/Header';\nimport { Footer } from './components/Footer/Footer';\nimport { ChessBoard } from './components/Chess/Chess';\nimport * as ChessJS from \"chess.js\";\nimport { HostOrSlave } from './components/HostOrSlave/HostOrSlave';\nimport { Host } from './components/Host/Host';\nimport { Slave } from './components/Slave/Slave';\nimport { useChat, useChatPeerConnectionSubscription } from './module/useChat/useChat';\nimport { PEER_CONNECTION_MODE } from './module/PeerConnection/PeerConnection';\n\nimport message from './assets/message_undraw.svg';\nimport share from './assets/share_undraw.svg';\n\nconst InnerWrapper = styled.div`\n`;\nconst Wrapper = styled.div`\n`;\n\n\ntype FlexContainerProps = {\n  reversed?: boolean;\n};\n\nconst FlexContainer = styled.div<FlexContainerProps>`\n  margin-left: 5%;\n  width: 90%;\n  display: flex;\n  align-items: center;\n  justify-items: space-between;\n  justify-content: center;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    flex-direction: ${props => props.reversed ? \"row-reverse\" : \"row\"}\n  }\n  img {\n    width: 80%;\n    @media (min-width: 768px) {\n      width: 70%;\n    }\n    margin-top: 5vh;\n    margin-bottom: 5vh;\n  }\n`;\n\nconst TextContainer = styled.div`\n  width: 100%;\n  @media (min-width: 768px) {\n    width: 60%;\n  }\n  font-size: 2vh;\n  margin: 2vh;\n  margin-left: 5vh;\n  margin-bottom: 5vh;\n  font-weight: 900;\n  @media only screen and (max-width: 900px){\n    width: 70%;\n  }\n`;\nconst Chess = typeof ChessJS === \"function\" ? ChessJS : ChessJS.Chess;\nconst game = new Chess();\nconst App: FC = memo(function App() {\n  const { mode, isConnected } = useChat();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [fen, setFen] = useState(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\");\n  \n  useChatPeerConnectionSubscription((a: string) => {\n    game.load(a);\n    setFen(a);\n  });\n  return (\n    <Wrapper>\n      <Header onClickButton={() => setModalOpen(true)} hideButton={isConnected}/>\n      {!isConnected && \n        <InnerWrapper>\n          <FlexContainer>\n            <TextContainer>\n              Serverless Chess with friends with the ability to analyse and share games!\n            </TextContainer>\n            <img src={message} alt=\"people messaging on phone drawing\"/>\n          </FlexContainer>\n          <FlexContainer reversed={true}>\n            <TextContainer>\n              Simply share the invite codes between devices and instantly start playing!<br/>\n              No data recorded anywhere!\n            </TextContainer>\n            <img src={share} alt=\"sharing drawing\"/>\n          </FlexContainer>\n          <Modal\n            style={{content: {\n              height: \"50%\", \n              top: '50%',\n              left: '50%',\n              right: 'auto',\n              bottom: 'auto',\n              padding: '3vh 3vh',\n              marginRight: '-50%',\n              transform: 'translate(-50%, -50%)'}}}\n            isOpen={isModalOpen}\n            onRequestClose={() => setModalOpen(false)}\n            contentLabel=\"Start New or Join\"\n          >\n              {!mode && <HostOrSlave />}\n              {mode === PEER_CONNECTION_MODE.HOST && !isConnected && <Host />}\n              {mode === PEER_CONNECTION_MODE.SLAVE && !isConnected && <Slave />}\n          </Modal>\n        </InnerWrapper>\n        \n      }\n      {mode && isConnected && \n        <InnerWrapper>\n          <ChessBoard game={game} fen={fen} setFen={setFen} orientation={mode === PEER_CONNECTION_MODE.HOST ? \"white\" : \"black\"} options={false} position={fen}/>\n        </InnerWrapper>\n      }\n      <Footer />\n    </Wrapper>\n  );\n});\n\nexport default App;\n\n// {!mode && <HostOrSlave />}\n// {mode === PEER_CONNECTION_MODE.HOST && !isConnected && <Host />}\n// {mode === PEER_CONNECTION_MODE.SLAVE && !isConnected && <Slave />}\n// {mode && isConnected && <Chat />}","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { PeerConnectionProvider } from './module/PeerConnection/PeerConnection';\nimport { GlobalStyle } from './styles/globalStyle';\nimport App from './App';\n\nReactDOM.render(\n  <PeerConnectionProvider>\n      <Fragment>\n        <GlobalStyle />\n        <App />\n      </Fragment>\n  </PeerConnectionProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}